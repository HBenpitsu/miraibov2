import 'package:flutter/material.dart';
import 'package:miraibo/skeleton/data_page/data_page.dart' as skt;
import 'package:miraibo/view/data_page/operation_windows.dart';

class OperationSection extends StatelessWidget {
  final skt.DataPage skeleton;
  const OperationSection(this.skeleton, {super.key});

  List<Widget> content(BuildContext context) {
    final exportButton = _OperationButton(
      label: 'Export',
      explanation: 'Export the data of all logged records to a file. '
          'A data is written in CSV format. The first line is the headers. '
          'WATCH OUT: Exported file is not a backup-file.',
      danger: false,
      onTap: () {
        openExportWindow(context, skeleton.openExportationWindow());
      },
    );
    final importButton = _OperationButton(
      label: 'Import',
      explanation: 'Import data from given file. '
          'The file must be written in CSV format. '
          'The first line of it should be the headers. '
          'Order and names of the headers must be the same as the exported file. ',
      danger: false,
      onTap: () {
        openImportWindow(context, skeleton.openImportationWindow());
      },
    );
    final overwriteButton = _OperationButton(
      label: 'Overwrite',
      explanation: 'REMOVE ALL logged records and import data from given file. '
          'This operation is IRREVERSIBLE. '
          'The file must be written in CSV format. '
          'The first line of it should be the headers. '
          'Order and names of the headers must be the same as the exported file. ',
      danger: true,
      onTap: () {
        openOverwriteWindow(context, skeleton.openOverwriteWindow());
      },
    );
    final backupButton = _OperationButton(
      label: 'Backup',
      explanation: 'Export all of the data of this app. It includes all of '
          'logged records, plans, estimation schemes, monitor schemes, categories, and currencies.'
          'Exported backup-file can be used to restore the app data later.',
      danger: false,
      onTap: () {
        openBackupWindow(context, skeleton.openBackupWindow());
      },
    );
    final restoreButton = _OperationButton(
        label: 'Restore',
        explanation:
            'REMOVE ALL of app data and import data from given backup-file. '
            'This operation is IRREVERSIBLE. The backup-file can be generated by the backup operation. ',
        danger: true,
        onTap: () {
          openRestoreWindow(context, skeleton.openRestoreWindow());
        });
    return [
      exportButton,
      importButton,
      overwriteButton,
      backupButton,
      restoreButton,
    ];
  }

  @override
  Widget build(BuildContext context) {
    return Padding(
        padding: const EdgeInsets.symmetric(horizontal: 20),
        child: SizedBox(
            width: 350,
            child: Column(
              children: content(context),
            )));
  }
}

class _OperationButton extends StatelessWidget {
  final String label;
  final String explanation;
  final bool danger;
  final void Function() onTap;
  const _OperationButton(
      {required this.label,
      required this.explanation,
      required this.danger,
      required this.onTap});

  @override
  Widget build(BuildContext context) {
    final content = SizedBox(
      width: double.infinity,
      height: 40,
      child: Center(
          child: Text(label,
              style: danger ? TextStyle(color: Colors.redAccent) : null)),
    );
    return Column(
      children: [
        Text(explanation),
        Padding(
            padding: const EdgeInsets.symmetric(horizontal: 20),
            child: TextButton(onPressed: onTap, child: content)),
        const Divider(),
      ],
    );
  }
}
